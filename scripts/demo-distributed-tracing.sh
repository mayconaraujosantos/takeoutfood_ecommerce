#!/bin/bash

# Script de demonstra√ß√£o do Distributed Tracing Avan√ßado
# com Custom Spans, Correlation IDs e M√©tricas Customizadas

echo "üöÄ DEMONSTRA√á√ÉO: Distributed Tracing Avan√ßado com Spring Boot + OpenTelemetry"
echo "================================================================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìã FUNCIONALIDADES IMPLEMENTADAS:${NC}"
echo "‚úÖ Custom Spans com @NewSpan e @SpanTag"
echo "‚úÖ Correlation IDs (X-Correlation-ID) com propaga√ß√£o autom√°tica"
echo "‚úÖ Distributed Tracing entre m√∫ltiplos servi√ßos"
echo "‚úÖ M√©tricas customizadas (Counters, Timers, Gauges)"
echo "‚úÖ Alertas baseados em lat√™ncia"
echo "‚úÖ Integra√ß√£o com Jaeger UI"
echo ""

echo -e "${YELLOW}üîß ARQUITETURA:${NC}"
echo "‚Ä¢ Auth Service (8081) - Servi√ßo principal com tracing e m√©tricas"
echo "‚Ä¢ User Service (8082) - Servi√ßo secund√°rio para distributed tracing"
echo "‚Ä¢ Jaeger (16686) - UI para visualiza√ß√£o de traces"
echo "‚Ä¢ OpenTelemetry OTLP (4318) - Exporta√ß√£o de traces"
echo ""

echo -e "${GREEN}üìä M√âTRICAS CUSTOMIZADAS IMPLEMENTADAS:${NC}"
echo "‚Ä¢ auth.validation.success - Counter de valida√ß√µes bem-sucedidas"
echo "‚Ä¢ auth.validation.error - Counter de valida√ß√µes com erro"
echo "‚Ä¢ auth.business.operation.duration - Timer de opera√ß√µes de neg√≥cio"
echo "‚Ä¢ auth.active.connections - Gauge de conex√µes ativas"
echo "‚Ä¢ Alertas autom√°ticos para lat√™ncia > 500ms e > 1000ms"
echo ""

echo -e "${BLUE}üéØ DEMONSTRA√á√ÉO DE CUSTOM SPANS:${NC}"
echo "Cada endpoint utiliza anota√ß√µes @NewSpan e @SpanTag:"
echo "‚Ä¢ @NewSpan('operation-name') - Cria spans customizados"
echo "‚Ä¢ @SpanTag('key') - Adiciona tags aos spans para filtering/searching"
echo "‚Ä¢ Correlation IDs autom√°ticos em todos os requests"
echo ""

echo -e "${GREEN}üì° ENDPOINTS PARA TESTE:${NC}"
echo ""
echo -e "${YELLOW}Auth Service (8081):${NC}"
echo "GET /actuator/health - Health check"
echo "GET /actuator/metrics - M√©tricas Micrometer"
echo "POST /api/auth/register - Registro com tracing"
echo "POST /api/auth/login - Login com tracing"
echo "GET /api/tracing/validate - Valida√ß√£o com custom spans"
echo "POST /api/tracing/metrics/simulate-load - Simular alta carga"
echo "POST /api/tracing/metrics/simulate-errors - Simular erros"
echo ""

echo -e "${YELLOW}User Service (8082):${NC}"
echo "GET /api/users/health - Health check"
echo "GET /api/users/{userId} - Buscar usu√°rio com tracing"
echo "POST /api/users/validate-with-auth - Distributed tracing (user->auth)"
echo "POST /api/users/distributed-trace-test - Teste completo de tracing"
echo ""

echo -e "${BLUE}üîç CORRELATION ID FLOW:${NC}"
echo "1. Request recebido sem Correlation ID"
echo "2. CorrelationIdInterceptor gera UUID √∫nico"
echo "3. Correlation ID adicionado ao MDC para logs"
echo "4. Correlation ID propagado em chamadas HTTP"
echo "5. Correlation ID inclu√≠do em spans OpenTelemetry"
echo "6. Logs estruturados com padr√£o: [traceId,spanId] [correlationId,requestId]"
echo ""

echo -e "${GREEN}üìà EXEMPLO DE TESTE COMPLETO:${NC}"
echo ""

CORRELATION_ID="demo-$(date +%s)"
echo -e "${YELLOW}Gerando Correlation ID para demo: ${CORRELATION_ID}${NC}"
echo ""

echo -e "${BLUE}1. Testando Auth Service Health:${NC}"
curl -s http://localhost:8081/actuator/health | jq . || echo "‚ùå Auth Service n√£o est√° rodando"
echo ""

echo -e "${BLUE}2. Testando User Service Health:${NC}"
# Tentar iniciar user-service se n√£o estiver rodando
if ! curl -s http://localhost:8082/api/users/health >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  User Service n√£o est√° rodando. Iniciando..."
    echo "Execute: java -jar user-service/target/user-service-1.0.0.jar --server.port=8082 --spring.profiles.active=local"
else
    echo "‚úÖ User Service est√° rodando"
fi
echo ""

echo -e "${GREEN}3. Exemplo de Registro com Tracing:${NC}"
echo "curl -X POST http://localhost:8081/api/auth/register \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -H 'X-Correlation-ID: ${CORRELATION_ID}' \\"
echo "  -d '{\"name\":\"Demo User\",\"email\":\"demo@tracing.com\",\"password\":\"demo123\"}'"
echo ""

echo -e "${GREEN}4. Exemplo de Simula√ß√£o de M√©tricas:${NC}"
echo "curl -X POST http://localhost:8081/api/tracing/metrics/simulate-load \\"
echo "  -H 'X-Correlation-ID: ${CORRELATION_ID}'"
echo ""

echo -e "${GREEN}5. Exemplo de Distributed Tracing:${NC}"
echo "curl -X POST http://localhost:8082/api/users/distributed-trace-test \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -H 'X-Correlation-ID: ${CORRELATION_ID}' \\"
echo "  -d 'scenario=chain'"
echo ""

echo -e "${BLUE}üéõÔ∏è  VISUALIZA√á√ÉO NO JAEGER:${NC}"
echo "1. Acesse: http://localhost:16686"
echo "2. Service: auth-service ou user-service"
echo "3. Busque por Correlation ID: ${CORRELATION_ID}"
echo "4. Visualize spans customizados e propaga√ß√£o entre servi√ßos"
echo ""

echo -e "${YELLOW}üîß ESTRUTURA DE LOGS:${NC}"
echo "Pattern: [traceId,spanId] [correlationId,requestId] Logger - Message"
echo "Exemplo: [abc123,def456] [${CORRELATION_ID},req-789] AuthController - Processing login"
echo ""

echo -e "${RED}‚ö†Ô∏è  REQUISITOS PARA EXECU√á√ÉO COMPLETA:${NC}"
echo "1. Jaeger rodando na porta 16686 (UI) e 4318 (OTLP)"
echo "2. Auth Service rodando na porta 8081"
echo "3. User Service rodando na porta 8082 (modo local com H2)"
echo "4. Para ambiente completo: PostgreSQL, Kafka e Service Discovery"
echo ""

echo -e "${GREEN}‚ú® FEATURES AVAN√áADAS IMPLEMENTADAS:${NC}"
echo "‚Ä¢ Interceptor autom√°tico de Correlation ID"
echo "‚Ä¢ Spans customizados com anota√ß√µes declarativas"
echo "‚Ä¢ M√©tricas de neg√≥cio (valida√ß√µes, lat√™ncia, conex√µes)"
echo "‚Ä¢ Alertas autom√°ticos baseados em lat√™ncia"
echo "‚Ä¢ Tracing distribu√≠do com propaga√ß√£o de contexto"
echo "‚Ä¢ Logs estruturados com trace correlation"
echo "‚Ä¢ RestTemplate instrumentado automaticamente"
echo ""

echo -e "${BLUE}üöÄ Para executar os testes, use os comandos curl acima!${NC}"
echo "================================================================================"