server:
  port: 8082

spring:
  application:
    name: user-service

  profiles:
    active: docker

  config:
    import: "optional:configserver:"
  cloud:
    config:
      enabled: false

  datasource:
    url: jdbc:postgresql://postgres:5432/ifood_db
    username: ifood_user
    password: ifood_pass
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,tracing
  endpoint:
    health:
      show-details: always

  # OpenTelemetry Tracing Configuration
  tracing:
    enabled: true
    sampling:
      probability: 1.0 # 100% sampling for development
  otlp:
    tracing:
      endpoint: http://jaeger:4318/v1/traces

logging:
  level:
    com.ifoodclone.user: DEBUG
    io.micrometer.tracing: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] [%X{correlationId:-},%X{requestId:-}] %logger{36} - %msg%n"

eureka:
  client:
    service-url:
      defaultZone: http://service-discovery:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

---
# Configuração para profile local (desenvolvimento)
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect

  h2:
    console:
      enabled: true

  cloud:
    config:
      enabled: false

management:
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces

# Desabilita Eureka para desenvolvimento local
eureka:
  client:
    enabled: false
