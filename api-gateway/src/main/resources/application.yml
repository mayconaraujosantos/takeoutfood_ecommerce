server:
  port: 8080

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: false
  config:
    import: "optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888}"
  cloud:
    config:
      enabled: true
      uri: ${CONFIG_SERVER_URL:http://localhost:8888}
      fail-fast: false
      retry:
        initial-interval: 1000
        max-attempts: 6
        max-interval: 2000
        multiplier: 1.1
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      metrics:
        enabled: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: false
      routes:
        # Health endpoint for testing without config server
        - id: gateway-health
          uri: http://localhost:8080
          predicates:
            - Path=/api/health,/api/info,/api/routes
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6380}
      password: ${REDIS_PASSWORD:ifood_redis_pass}
      timeout: 2s
      connect-timeout: 2s

eureka:
  client:
    enabled: ${EUREKA_ENABLED:true}
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761}/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
  expiration: 86400000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always

logging:
  level:
    '[com.ifoodclone.gateway]': INFO
    '[org.springframework.cloud.gateway]': INFO
    '[org.springframework.cloud.netflix.eureka]': DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
